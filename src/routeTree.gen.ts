/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from "@tanstack/react-start/server";

import { Route as rootRouteImport } from "./routes/__root";
import { Route as AuthedRouteRouteImport } from "./routes/_authed/route";
import { Route as IndexRouteImport } from "./routes/index";
import { Route as AuthSignup2RouteImport } from "./routes/auth/signup2";
import { Route as AuthLogin2RouteImport } from "./routes/auth/login2";
import { Route as AuthAuthViewRouteImport } from "./routes/auth/$authView";
import { Route as AuthedDashboardRouteImport } from "./routes/_authed/dashboard";
import { ServerRoute as ApiAuthSplatServerRouteImport } from "./routes/api/auth/$";

const rootServerRouteImport = createServerRootRoute();

const AuthedRouteRoute = AuthedRouteRouteImport.update({
  id: "/_authed",
  getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any);
const AuthSignup2Route = AuthSignup2RouteImport.update({
  id: "/auth/signup2",
  path: "/auth/signup2",
  getParentRoute: () => rootRouteImport,
} as any);
const AuthLogin2Route = AuthLogin2RouteImport.update({
  id: "/auth/login2",
  path: "/auth/login2",
  getParentRoute: () => rootRouteImport,
} as any);
const AuthAuthViewRoute = AuthAuthViewRouteImport.update({
  id: "/auth/$authView",
  path: "/auth/$authView",
  getParentRoute: () => rootRouteImport,
} as any);
const AuthedDashboardRoute = AuthedDashboardRouteImport.update({
  id: "/dashboard",
  path: "/dashboard",
  getParentRoute: () => AuthedRouteRoute,
} as any);
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: "/api/auth/$",
  path: "/api/auth/$",
  getParentRoute: () => rootServerRouteImport,
} as any);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/dashboard": typeof AuthedDashboardRoute;
  "/auth/$authView": typeof AuthAuthViewRoute;
  "/auth/login2": typeof AuthLogin2Route;
  "/auth/signup2": typeof AuthSignup2Route;
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/dashboard": typeof AuthedDashboardRoute;
  "/auth/$authView": typeof AuthAuthViewRoute;
  "/auth/login2": typeof AuthLogin2Route;
  "/auth/signup2": typeof AuthSignup2Route;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  "/": typeof IndexRoute;
  "/_authed": typeof AuthedRouteRouteWithChildren;
  "/_authed/dashboard": typeof AuthedDashboardRoute;
  "/auth/$authView": typeof AuthAuthViewRoute;
  "/auth/login2": typeof AuthLogin2Route;
  "/auth/signup2": typeof AuthSignup2Route;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | "/dashboard"
    | "/auth/$authView"
    | "/auth/login2"
    | "/auth/signup2";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/dashboard" | "/auth/$authView" | "/auth/login2" | "/auth/signup2";
  id:
    | "__root__"
    | "/"
    | "/_authed"
    | "/_authed/dashboard"
    | "/auth/$authView"
    | "/auth/login2"
    | "/auth/signup2";
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AuthedRouteRoute: typeof AuthedRouteRouteWithChildren;
  AuthAuthViewRoute: typeof AuthAuthViewRoute;
  AuthLogin2Route: typeof AuthLogin2Route;
  AuthSignup2Route: typeof AuthSignup2Route;
}
export interface FileServerRoutesByFullPath {
  "/api/auth/$": typeof ApiAuthSplatServerRoute;
}
export interface FileServerRoutesByTo {
  "/api/auth/$": typeof ApiAuthSplatServerRoute;
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport;
  "/api/auth/$": typeof ApiAuthSplatServerRoute;
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath;
  fullPaths: "/api/auth/$";
  fileServerRoutesByTo: FileServerRoutesByTo;
  to: "/api/auth/$";
  id: "__root__" | "/api/auth/$";
  fileServerRoutesById: FileServerRoutesById;
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute;
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_authed": {
      id: "/_authed";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof AuthedRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/auth/signup2": {
      id: "/auth/signup2";
      path: "/auth/signup2";
      fullPath: "/auth/signup2";
      preLoaderRoute: typeof AuthSignup2RouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/auth/login2": {
      id: "/auth/login2";
      path: "/auth/login2";
      fullPath: "/auth/login2";
      preLoaderRoute: typeof AuthLogin2RouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/auth/$authView": {
      id: "/auth/$authView";
      path: "/auth/$authView";
      fullPath: "/auth/$authView";
      preLoaderRoute: typeof AuthAuthViewRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/_authed/dashboard": {
      id: "/_authed/dashboard";
      path: "/dashboard";
      fullPath: "/dashboard";
      preLoaderRoute: typeof AuthedDashboardRouteImport;
      parentRoute: typeof AuthedRouteRoute;
    };
  }
}
declare module "@tanstack/react-start/server" {
  interface ServerFileRoutesByPath {
    "/api/auth/$": {
      id: "/api/auth/$";
      path: "/api/auth/$";
      fullPath: "/api/auth/$";
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
  }
}

interface AuthedRouteRouteChildren {
  AuthedDashboardRoute: typeof AuthedDashboardRoute;
}

const AuthedRouteRouteChildren: AuthedRouteRouteChildren = {
  AuthedDashboardRoute: AuthedDashboardRoute,
};

const AuthedRouteRouteWithChildren = AuthedRouteRoute._addFileChildren(
  AuthedRouteRouteChildren,
);

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRouteRoute: AuthedRouteRouteWithChildren,
  AuthAuthViewRoute: AuthAuthViewRoute,
  AuthLogin2Route: AuthLogin2Route,
  AuthSignup2Route: AuthSignup2Route,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
};
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>();
